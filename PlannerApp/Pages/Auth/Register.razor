@page "/auth/register"
@layout AuthLayout
@inject AuthenticationService AuthenticationService
@inject NavigationManager NavigationManager


<div class="row">
    <div class="col-12">
        <h2>Create a new account</h2>
        <EditForm Model="model" OnValidSubmit="RegisterUser">
            <RadzenCard>
    <AlertMessage Message="@message" MessageType="@MessageType"></AlertMessage>
                
    @*@if (!string.IsNullOrWhiteSpace(message))
                {
                    <div class="alert alert-info">@message</div>
                }*@

                <DataAnnotationsValidator></DataAnnotationsValidator>

                <label>First Name</label>
                <RadzenTextBox @bind-Value="model.FirstName"></RadzenTextBox>
                <ValidationMessage For="@(() => model.FirstName)"></ValidationMessage>

                <label>Last Name</label>
                <RadzenTextBox @bind-Value="model.LastName"></RadzenTextBox>
                <ValidationMessage For="@(() => model.LastName)"></ValidationMessage>

                <label>Email</label>
                <RadzenTextBox @bind-Value="model.Email"></RadzenTextBox>
                <ValidationMessage For="@(() => model.Email)"></ValidationMessage>

                <label>Password</label>
                <RadzenPassword @bind-Value="model.Password"></RadzenPassword>
                <ValidationMessage For="@(() => model.Password)"></ValidationMessage>


                <label>Confirm Password</label>
                <RadzenPassword @bind-Value="model.ConfirmPassword"></RadzenPassword>
                <ValidationMessage For="@(() => model.ConfirmPassword)"></ValidationMessage>

                <hr />
                <RadzenButton ButtonType="Radzen.ButtonType.Submit" Text="Register" ButtonStyle="Radzen.ButtonStyle.Primary"
                              class="btn-block mr-2" Disabled="isBusy"></RadzenButton>
                <RadzenButton ButtonType="Radzen.ButtonType.Button" Text="Login" ButtonStyle="Radzen.ButtonStyle.Secondary"
                              class="btn-block mr-2" Disabled="isBusy" Click="GoToLogin"></RadzenButton>

            </RadzenCard>
        </EditForm>
    </div>
</div>

@code {

    RegisterRequest model = new RegisterRequest();
    AlertMessageType MessageType = AlertMessageType.Success;
    bool isBusy = false;
    string message = string.Empty;

    public async Task RegisterUser()
    {
        isBusy = true;

        var result = await AuthenticationService.RegisterUserAsync(model);
        if (result.IsSuccess)
        {
            message = result.Message;
            MessageType = AlertMessageType.Success;
        }
        else
        {
            message = result.Errors.FirstOrDefault() ?? result.Message;
            MessageType = AlertMessageType.Error;
        }


        isBusy = false;
    }

    private void GoToLogin()
    {
        NavigationManager.NavigateTo("/auth/login");
    }
}
